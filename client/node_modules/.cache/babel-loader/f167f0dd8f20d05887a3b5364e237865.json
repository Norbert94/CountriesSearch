{"ast":null,"code":"import _regeneratorRuntime from \"E:/Programming/example-create-react-app-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/Programming/example-create-react-app-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\Programming\\\\example-create-react-app-express\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n    this.callApi = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/api/hello');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            return _context.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.next = 3;\n              return fetch(\"/api/world?name=\".concat(encodeURIComponent(_this.state.post)));\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.text();\n\n            case 6:\n              body = _context2.sent;\n\n              _this.setState({\n                responseToPost: body\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Search for countries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.post,\n          onChange: e => this.setState({\n            post: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n          columns: [{\n            title: \"Full Name\",\n            field: \"name\"\n          }, {\n            title: \"Alpha Code 2\",\n            field: \"alpha2Code\"\n          }, {\n            title: \"Alpha Code 3\",\n            field: \"alpha3Code\"\n          }, {\n            title: \"Flag\",\n            field: \"flag\"\n          }, {\n            title: \"Region\",\n            field: \"region\"\n          }, {\n            title: \"Subregion\",\n            field: \"subregion\"\n          }, {\n            title: \"Population\",\n            field: \"population\"\n          }, {\n            title: \"Languages\",\n            field: \"languages\"\n          }],\n          data: [{\n            name: \"United States of America\",\n            alpha2Code: \"US\",\n            alpha3Code: \"USA\",\n            flag: \"https://restcountries.eu/data/usa.svg\",\n            region: \"Americas\",\n            subregion: \"Northern America\",\n            population: \"323947000\",\n            languages: \"English\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.responseToPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Programming/example-create-react-app-express/client/src/App.js"],"names":["React","Component","MaterialTable","App","state","response","post","responseToPost","callApi","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","encodeURIComponent","text","setState","componentDidMount","then","res","express","catch","err","console","log","render","target","value","maxWidth","title","field","name","alpha2Code","alpha3Code","flag","region","subregion","population","languages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  \n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(`/api/world?name=${encodeURIComponent(this.state.post)}`);\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n\nrender() {\n    return (\n      <div className=\"App\">\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Search for countries:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <div style={{maxWidth: \"100%\"}}>\n                <MaterialTable\n                    columns={[\n                        {title: \"Full Name\", field: \"name\"},\n                        {title: \"Alpha Code 2\", field: \"alpha2Code\"},\n                        {title: \"Alpha Code 3\", field: \"alpha3Code\"},\n                        {title: \"Flag\", field: \"flag\"},\n                        {title: \"Region\", field: \"region\"},\n                        {title: \"Subregion\", field: \"subregion\"},\n                        {title: \"Population\", field: \"population\"},\n                        {title: \"Languages\", field: \"languages\"},\n                    ]}\n                    data={[\n                        {\n                            name: \"United States of America\",\n                            alpha2Code: \"US\",\n                            alpha3Code: \"USA\",\n                            flag: \"https://restcountries.eu/data/usa.svg\",\n                            region: \"Americas\",\n                            subregion: \"Northern America\",\n                            population: \"323947000\",\n                            languages: \"English\"\n                        }\n                    ]}/>\n            </div>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}