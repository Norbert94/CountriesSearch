{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\example-create-react-app-express\\\\client\\\\src\\\\component\\\\ResultTable.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResultTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.responseToPost || []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.responseToPost !== this.props.data.responseToPost) {\n      this.setState({\n        data: this.props.data.responseToPost\n      });\n    }\n  }\n\n  render() {\n    const newData = this.state.data.map(value => ({\n      name: value.name,\n      alpha2Code: value.alpha2Code,\n      alpha3Code: value.alpha3Code,\n      flag: value.flag,\n      region: value.region,\n      subregion: value.subregion,\n      population: value.population,\n      languages: value.languages.map(language => language.name).join(\", \")\n    }));\n    let regionCount = newData.map(x => x.region).reduce((obj, item) => {\n      obj[item] = (obj[item] || 0) + 1;\n      return obj;\n    }, {});\n    let regionEntries = Object.entries(regionCount).forEach(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$\", key, \": $\", value, \" \\\\n\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 83\n    }, this));\n    let subRegionCount = newData.map(x => x.subregion).reduce((obj, item) => {\n      obj[item] = (obj[item] || 0) + 1;\n      return obj;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: [{\n          title: \"Flag\",\n          field: \"flag\",\n          render: item => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.flag,\n            alt: \"\",\n            border: \"3\",\n            height: \"75\",\n            width: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 72\n          }, this)\n        }, {\n          title: \"Full Name\",\n          field: \"name\"\n        }, {\n          title: \"Alpha Code 2\",\n          field: \"alpha2Code\"\n        }, {\n          title: \"Alpha Code 3\",\n          field: \"alpha3Code\"\n        }, {\n          title: \"Region\",\n          field: \"region\"\n        }, {\n          title: \"Subregion\",\n          field: \"subregion\"\n        }, {\n          title: \"Population\",\n          field: \"population\",\n          defaultSort: \"desc\"\n        }, {\n          title: \"Languages\",\n          field: \"languages\"\n        }],\n        data: newData,\n        title: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Countries: \", newData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Regions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultTable;","map":{"version":3,"sources":["E:/Programming/example-create-react-app-express/client/src/component/ResultTable.js"],"names":["React","Component","MaterialTable","ResultTable","constructor","props","state","data","responseToPost","componentDidUpdate","prevProps","setState","render","newData","map","value","name","alpha2Code","alpha3Code","flag","region","subregion","population","languages","language","join","regionCount","x","reduce","obj","item","regionEntries","Object","entries","forEach","key","subRegionCount","maxWidth","marginTop","title","field","defaultSort","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nclass ResultTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {data: this.props.responseToPost || []}\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.data.responseToPost !== this.props.data.responseToPost) {\r\n            this.setState({data: this.props.data.responseToPost});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const newData = this.state.data.map((value) => ({\r\n            name: value.name,\r\n            alpha2Code: value.alpha2Code,\r\n            alpha3Code: value.alpha3Code,\r\n            flag: value.flag,\r\n            region: value.region,\r\n            subregion: value.subregion,\r\n            population: value.population,\r\n            languages: value.languages.map(language => language.name).join(\", \")\r\n        }));\r\n        let regionCount = newData.map(x => x.region).reduce((obj, item) => {obj[item] = (obj[item] || 0) + 1; return obj;}, {});\r\n        let regionEntries = Object.entries(regionCount).forEach(([key, value]) => <p>${key}: ${value} \\n</p>);\r\n        let subRegionCount = newData.map(x => x.subregion).reduce((obj, item) => {obj[item] = (obj[item] || 0) + 1; return obj;}, {});\r\n        return (\r\n            <div style={{maxWidth: \"100%\", marginTop: \"20px\"}}>\r\n                <MaterialTable\r\n                    columns={[\r\n                        {title: \"Flag\", field: \"flag\", render: item => <img src={item.flag} alt=\"\" border=\"3\" height=\"75\" width=\"100\" />},\r\n                        {title: \"Full Name\", field: \"name\"},\r\n                        {title: \"Alpha Code 2\", field: \"alpha2Code\"},\r\n                        {title: \"Alpha Code 3\", field: \"alpha3Code\"},\r\n                        {title: \"Region\", field: \"region\"},\r\n                        {title: \"Subregion\", field: \"subregion\"},\r\n                        {title: \"Population\", field: \"population\", defaultSort: \"desc\"},\r\n                        {title: \"Languages\", field: \"languages\"},\r\n                    ]}\r\n                    data={newData}\r\n                    title=\"Countries\"/>\r\n                    <h2>\r\n                        Total Countries: {newData.length}\r\n                    </h2>\r\n                    <h3>\r\n                        Regions: \r\n                        {}\r\n                    </h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultTable;"]},"metadata":{},"sourceType":"module"}